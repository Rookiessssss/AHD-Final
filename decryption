//B = ((B - S[2i + 1] >>> A) XOR A;
//A = ((A - S[2i]) >>> B) XOR B;
//B = B - S[1];
//A = A - S[0];

//S[2i+1]----$1
//S[2i]  ----$2
//b_temp ----$3
//a_temp ----$4
//Parameters to count rotation loops----$7, $8
//Parameters to do xor----$5, $6
//S array----$10
//shifted S array----$11
//i_cnt----$12
//miminum i-1----$13


addi $0, $12, 12
addi $0, $13, 0

loop1:
add $12, $12, $11
add $11, $11, $11 //4*i
add $11, $11, $11 
add $11, $10, $11 
lw $1, 4($11)
lw $2, 0($11)

sub $3, $1, $3 //B = B – S[2*i + 1]
sub $4, $2, $4 //A = A – S[2*i]
addi $0, $7, 0
addi $0, $8, 0

loop2:
shr $3, $3, 1
addi $7, $7, 1
bne $7, $4, loop2 //>>>A

nor $3, $3, $5
nor $3, $4, $6
nor $5, $6, $5
nor $4, $4, $6
nor $5, $6, $3 //B XOR A

loop3:
shr $4, $4, 1
addi $8, $8, 1
bne $8, $3, loop3 //>>>B

nor $3, $3, $5
nor $3, $4, $6
nor $5, $6, $5
nor $4, $4, $6
nor $5, $6, $3  //A XOR B

subi $12, $12, 1
bne $12, $13, loop1

lw $1, 4($10)
lw $2, 0($10)
sub $3, $1, $3 //B = B – S[1]
sub $4, $2, $4 //A = A – S[0]
hal
